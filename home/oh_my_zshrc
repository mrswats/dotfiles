# #!/usr/bin/zsh
# TERMINAL, EDITOR and BROWSER env 
export TERMINAL=termite
export EDITOR=nvim
export BROWSER=google-chrome

# Env for vim
VIMDIR=$HOME/.config/nvim
export VIMRC=$VIMDIR/init.vim
export VIMPLUG=$VIMDIR/plugins

# Load custom aliases
[ -f $HOME/.zsh_aliases ] && source $HOME/.zsh_aliases
# Add .local to PATH
if [ -d $HOME/.local/bin ]; then
        export PATH=$PATH:$HOME/.local/bin
fi

# Antigen: Plugin Manager for Zsh
ANTIGEN_HOME=$HOME/.antigen
if [ ! -d $ANTIGEN_HOME ]; then
        echo "Antigen plugin manager not found! Downloading..."
        git clone https://github.com/zsh-users/antigen.git $ANTIGEN_HOME
fi

[ -f $ANTIGEN_HOME/antigen.zsh ] && source $ANTIGEN_HOME/antigen.zsh

# Load the oh my zsh library
antigen use oh-my-zsh

antigen theme romkatv/powerlevel10k
POWERLEVEL9K_INSTALLATION_PATH=$ANTIGEN_BUNDLES/romkatv/powerlevel10k

antigen bundle paulirish/git-open
antigen bundle zdharma/fast-syntax-highlighting

# Builtin plugins on oh my zsh
antigen bundle zsh_reload
antigen bundle command-not-found
antigen bundle git
antigen bundle python
antigen bundle virtualenvwrapper
antigen bundle dnf

antigen apply

# Activate nord dir colors
DIRCOLORSHOME=$HOME/.local/share/nord_dir_colors
DIRCOLORS=$HOME/.dir_colors
if [[ ! -f $DIRCOLORS ]]; then
        echo "No dir_colors found."
        if [[ ! -d $DIRCOLORSHOME ]]; then
                echo "Downloading nord dir_colors..."
                git clone https://github.com/arcticicestudio/nord-dircolors $DIRCOLORSHOME
        fi
        ln -sf $DIRCOLORSHOME/src/dir_colors $DIRCOLORS
fi
test -r "$DIRCOLORS" && eval $(dircolors $DIRCOLORS)

# POWERLEEVL10K  configuration
POWERLEVEL9K_MODE="awesome-fontconfig"

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    background_jobs
    dir
    virtualenv
    vcs
)

POWERLEVEL9K_DISABLE_RPROMPT=true
POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
POWERLEVEL9K_SHORTEN_DELIMITER=' ..' 
POWERLEVEL9K_COLOR_SCHEME='dark'

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# ssh
export SSH_KEY_PATH="$HOME/.ssh/rsa_id"

# Local bin to PATH
LOCAL_BIN=$HOME/.local/bin
if [ -d $LOCAL_BIN ]; then
    export PATH=$PATH:$LOCAL_BIN
fi

# TexLive distro
TEXLIVE=/usr/local/texlive/2018
if [ -d $TEXLIVE ]; then
    export MANPATH=$MANPATH:$TEXLIVE/texmf-dist/doc/man
    export INFOPATH=$INFOPATH:$TEXLIVE/texmf-dist/doc/info
    export PATH=$PATH:$TEXLIVE/bin/x86_64-linux
fi

# VirtualEnvWrapper
export WORKON_HOME=$HOME/.virtualenv
export PROJECT_HOME=$HOME/local
export PIP_REQUIRE_VIRTUALENV=true
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3.7
source /usr/local/bin/virtualenvwrapper.sh
# Make sure that we activate the virtualenv upon CDing into a directory
cd $PWD

# Disable CTRL-s in the terminal
# check xon/xoff settings
if [ -t 0 ]; then # term test?
    # Turn off TTY "start" and "stop" commands in all interactive shells.
    # They default to C-q and C-s, Bash uses C-s to do a forward history search.
    stty start ''
    stty stop  ''
    stty -ixon # disable XON/XOFF flow control
    stty ixoff # enable sending (to app) of start/stop characters
    stty ixany # let any character restart output, not only start character
fi

setopt no_share_history
