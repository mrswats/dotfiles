" PLUGIN MANAGER
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Specify directory for plugins
call plug#begin('~/.vim/plugged')

" VERY IMPORTANT TO USE SINGLE QUOTES
" NerdTree for stuff
Plug 'scrooloose/nerdtree'

" Git Integration
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'Xuyuanp/nerdtree-git-plugin'

" Python Plugins
" Using Jedi-Vim for python related stuff
" Flake8 and isort
Plug 'davidhalter/jedi-vim'
Plug 'nvie/vim-flake8'

" Other plugins
Plug 'scrooloose/nerdcommenter'
Plug 'itchyny/lightline.vim'
Plug 'jiangmiao/auto-pairs'
"https://github.com/lervag/vimtex
Plug 'lervag/vimtex'

" Yet another color scheme
Plug 'morhetz/gruvbox'
Plug 'vim-python/python-syntax'

" Finished Initialising Plugins
call plug#end()

" Set color scheme
set background=dark
colorscheme gruvbox

" Misc
" Encoding
set encoding=utf-8
" Show line numbers
set nu
" Show commands being typed in normal mode
set showcmd
" Highlight search result and remap :nohs
set hlsearch
nnoremap <leader><space> :noh<CR>
"Do not wrap lines
set nowrap

" Python configuration for tabs and spaces and all that
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set fileformat=unix

" More natural split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
" Open splits to the right
set splitright
set splitbelow

" vimrc config from https://github.com/changemewtf/no_plugins/blob/master/no_plugins.vim
set nocompatible
syntax enable
filetype plugin on

" Search down into subfolders
" Provides tab-completion for all related tasks 
set path+=**

" Display all matching files when tab completing
set wildmenu

" lightline.vim 
set laststatus=2

" NERDTree Configuration
" Open NERDTree automatically on startup and move cursor to file
autocmd vimenter * if !argc() | NERDTree | endif
" Close vim if NERDTree is the only window
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" Map CTRL+\ to open NERDTree
map <C-\> :NERDTreeToggle<CR>
" Configs for
let NERDTreeQuitOnOpen = 1
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeShowHidden = 1
let NERDTreeIgnore = ['\.pyc$', '__pycache__/', '.git/', '\.swp$']

" Nerdcommenter configs

" Flake8 plugin configs
let g:flake8_show_in_gutter=1  " Show in gutter
let g:flake8_show_in_file=1    " Show in file
autocmd BufWritePost *.py call flake8#Flake8()

