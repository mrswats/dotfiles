" PLUGIN MANAGER
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Specify directory for plugins
call plug#begin('~/.vim/plugged')

" VERY IMPORTANT TO USE SINGLE QUOTES
" NerdTree for stuff
Plug 'scrooloose/nerdtree'

" Git Integration
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'Xuyuanp/nerdtree-git-plugin'

" Python Plugins
" Using Jedi-Vim for python related stuff
" Flake8 and isort
Plug 'davidhalter/jedi-vim'
Plug 'nvie/vim-flake8'
Plug 'fisadev/vim-isort'

" Testing from vim
Plug 'tpope/vim-dispatch'
Plug 'janko/vim-test'

" Other plugins
Plug 'scrooloose/nerdcommenter'
Plug 'itchyny/lightline.vim'
Plug 'jiangmiao/auto-pairs'

" Yet another color scheme
Plug 'junegunn/seoul256.vim'
Plug 'morhetz/gruvbox'

" Finished Initialising Plugins
call plug#end()

" Set color scheme
set background=dark
colorscheme gruvbox
set t_Co=256

" Misc
" Encoding
set encoding=utf-8
" Show line numbers
set nu
" Open splits to the right
set splitright
set splitbelow
" Show commands being typed in normal mode
set showcmd
" Highlight search results
set hlsearch
"Do not wrap lines
set nowrap

" Python configuration for tabs and spaces and all that
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set fileformat=unix

" vimrc config from https://github.com/changemewtf/no_plugins/blob/master/no_plugins.vim
set nocompatible
syntax enable
filetype plugin on

" Search down into subfolders
" Provides tab-completion for all related tasks 
set path+=**
set path+=$HOME/local

" Display all matching files when tab completing
set wildmenu

" NERDTree Configuration
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif " Close vim if NERDTree is the only window
let NERDTreeAutoDeleteBuffer = 1 " Delete a file in the tree
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeShowHidden = 1
let NERDTreeIgnore = ['\.pyc$', '__pycache__/', '.git/', '\.swp$']
autocmd vimenter * NERDTree |  wincmd p " Open NERDTree automatically on startup and move cursor to file
" How can I open a NERDTree automatically when vim starts up if no files were specified?
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | wincmd p | endif
" Map CTRL+n to open NERDTree
map <C-\> :NERDTreeToggle<CR>

" Nerdcommenter configs


" Flake8 plugin configs
let g:flake8_show_in_gutter=1  " Show in gutter
let g:flake8_show_in_file=1    " Show in file
autocmd BufWritePost *.py call flake8#Flake8()

" vim-test configuration
" TODO!
"nmap <F5> :TestSuite<CR>
"nmap <F6> :TestFile<CR>
"nmap <F7> :TestLast<CR>
"let test#python#runner = "pytest"
"let test#strategy = "dispatch"
